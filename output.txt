; ModuleID = 'mylang2ir'
declare i32 @printf(i8*, ...)
@print.str = constant [4 x i8] c"%d\0A\00"

define i32 @main() {

	%a = alloca i32
	%c0 = alloca i32

	store i32 0, i32* %a
	store i32 0, i32* %c0

	br label %ifcond1

ifcond1:
	%t1 = load i32* %a
	%t2 = sub i32 %t1, 2
	%t3 = icmp eq i32 %t2, 0
	br i1 %t3, label %ifbody1, label %ifend1

ifbody1:
	%t4 = mul i32 3, 9
	%t5 = add i32 2, %t4
	store i32 %t5, i32* %c0
	br label %ifend1

ifend1:

	br label %ifcond2

ifcond2:
	%t6 = load i32* %a
	%t7 = sub i32 %t6, 2
	%t8 = icmp sgt i32 %t7, 0
	br i1 %t8, label %ifbody2, label %ifend2

ifbody2:
	store i32 2, i32* %c0
	br label %ifend2

ifend2:

	br label %ifcond3

ifcond3:
	%t9 = load i32* %a
	%t10 = sub i32 %t9, 2
	%t11 = icmp slt i32 %t10, 0
	br i1 %t11, label %ifbody3, label %ifend3

ifbody3:
	store i32 3, i32* %c0
	br label %ifend3

ifend3:

	%t12 = load i32* %c0
	%t13 = add i32 4, %t12
	store i32 %t13, i32* %a
	%t14 = load i32* %a
	call i32 (i8*, ...)* @printf(i8* getelementptr ([4 x i8]* @print.str, i32 0, i32 0), i32 %t14 )
	ret i32 0
}